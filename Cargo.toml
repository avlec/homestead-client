[package]
name = "testing"
authors = ["Alec Cox"]
version = "0.1.0"
edition = "2021"

[dependencies]
embassy-embedded-hal = { version = "0.1.0", path = "/home/avlec/rp2040/embassy/embassy-embedded-hal", features = ["defmt"] }
# embassy-sync = { version = "0.2.0", path = "/home/avlec/rp2040/embassy/embassy-sync", features = ["defmt"] }
embassy-executor = { version = "0.2.0", path = "/home/avlec/rp2040/embassy/embassy-executor", features = ["nightly", "arch-cortex-m", "executor-thread", "executor-interrupt", "defmt", "integrated-timers"] }
embassy-time = { version = "0.1.2", path = "/home/avlec/rp2040/embassy/embassy-time", features = ["nightly", "unstable-traits", "defmt", "defmt-timestamp-uptime"] }
embassy-rp = { version = "0.1.0", path = "/home/avlec/rp2040/embassy/embassy-rp", features = ["defmt", "unstable-traits", "nightly", "unstable-pac", "time-driver", "critical-section-impl"] }
# embassy-usb = { version = "0.1.0", path = "/home/avlec/rp2040/embassy/embassy-usb", features = ["defmt"] }
embassy-net = { version = "0.1.0", path = "/home/avlec/rp2040/embassy/embassy-net", features = ["defmt", "nightly", "unstable-traits", "tcp", "dns", "dhcpv4", "medium-ethernet"] }
# embassy-net-w5500 = { version = "0.1.0", path = "/home/avlec/rp2040/embassy/embassy-net-w5500", features = ["defmt"] }
embassy-futures = { version = "0.1.0", path = "/home/avlec/rp2040/embassy/embassy-futures" }
# embassy-usb-logger = { version = "0.1.0", path = "/home/avlec/rp2040/embassy/embassy-usb-logger" }
# embassy-lora = { version = "0.1.0", path = "/home/avlec/rp2040/embassy/embassy-lora", features = ["time", "defmt"] }
# lora-phy = { version = "1" }
# lorawan-device = { version = "0.10.0", default-features = false, features = ["async", "external-lora-phy"] }
# lorawan = { version = "0.7.3", default-features = false, features = ["default-crypto"] }
cyw43 = { path = "/home/avlec/rp2040/embassy/cyw43", features = ["defmt", "firmware-logs"] }
cyw43-pio = { path = "/home/avlec/rp2040/embassy/cyw43-pio", features = ["defmt", "overclock"] }

defmt = "0.3"
defmt-rtt = "0.4"
fixed = "1.23.1"
fixed-macro = "1.2"

# cortex-m = { version = "0.7.6", features = ["critical-section-single-core"] }
cortex-m = { version = "0.7.6", features = ["inline-asm"] }
cortex-m-rt = "0.7.0"
panic-probe = { version = "0.3", features = ["print-defmt"] }
futures = { version = "0.3.17", default-features = false, features = ["async-await", "cfg-target-has-atomic", "unstable"] }
display-interface-spi = "0.4.1"
embedded-graphics = "0.7.1"
# st7789 = "0.6.1"
display-interface = "0.4.1"
# byte-slice-cast = { version = "1.2.0", default-features = false }
# smart-leds = "0.3.0"
heapless = { version = "0.7.15", features = ["serde"] }
# usbd-hid = "0.6.1"

embedded-hal-1 = { package = "embedded-hal", version = "=1.0.0-alpha.11" }
embedded-hal-async = "0.2.0-alpha.2"
embedded-io-async = { version = "0.5.0", features = ["defmt-03"] }
# embedded-storage = { version = "0.3" }
static_cell = { version = "1.1", features = ["nightly"]}
log = "0.4"
pio-proc = "0.2"
pio = "0.2.1"
rand = { version = "0.8.5", default-features = false }

# begin non-bsp stuff
# this could be useful for processing http requests and responses, however this doesn't
# currently have anything for generating http requests and responses
# httparse = { version = "1.8.0", default-features = false }

# waveshare display
epd-waveshare = { version = "0.5.0", features = ["graphics"] }
# splashscreen
tinybmp = "0.4.0"

# http client library
reqwless = { version = "0.5.0" , features = ["defmt"]}
serde = { version = "1.0", default-features = false, features = ["derive"] }
serde-json-core = { version = "0.5.2", features = ["defmt"] }

[patch.crates-io]
epd-waveshare = { path = "../epd-waveshare" }
serde-json-core = { path = "../serde-json-core" }
#reqwless = { path = "../reqwless" }

[profile.dev]
debug = true
lto = true

[profile.release]
debug = false
opt-level = "z"
lto = true
strip = "symbols"
codegen-units = 1
